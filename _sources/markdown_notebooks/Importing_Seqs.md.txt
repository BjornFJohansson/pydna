# Importing and viewing sequence files in pydna
> Visit the full library documentation [here](https://bjornfjohansson.github.io/pydna/)

pydna can be used to work with FASTA, Genbank, EMBL, and snapgene files (.fasta, .gb, .embl, .dna). You can read these files into a `Dseqrecord` that one can view and work with. You can also instantiate `Dseqrecord` objects with strings.

## Importing Sequence Files

To import files into pydna is simple. pydna provides the `parse` method to read all DNA sequences in a file into a list. As an input, `parse` can take:

* The path to a file from your computer
* A python string with the file content.

The following code shows an example of how to use the `parse` function to import a FASTA file.

<a target="_blank" href="https://colab.research.google.com/github/BjornFJohansson/pydna/blob/dev_bjorn/docs/notebooks/Importing_Seqs.ipynb">
  <img src="https://colab.research.google.com/assets/colab-badge.svg" alt="Open In Colab"/>
</a>


```python
# Install pydna (only when running on Colab)
import sys
if 'google.colab' in sys.modules:
    %%capture
    # Install the current development version of pydna (comment to install pip version)
    !pip install git+https://github.com/BjornFJohansson/pydna@dev_bjorn
    # Install pip version instead (uncomment to install)
    # !pip install pydna

```


```python
from pydna.parsers import parse

#Import your file into python using its path
file_path = "./U49845.fasta"
files = parse(file_path)

#Show your FASTA file in python
print(files[0].format("fasta"))
```

    >lcl|U49845.1_cds_AAA98665.1_1 [protein=TCP1-beta] [frame=3] [protein_id=AAA98665.1] [location=<1..206] [gbkey=CDS]
    TCCTCCATATACAACGGTATCTCCACCTCAGGTTTAGATCTCAACAACGGAACCATTGCC
    GACATGAGACAGTTAGGTATCGTCGAGAGTTACAAGCTAAAACGAGCAGTAGTCAGCTCT
    GCATCTGAAGCCGCTGAAGTTCTACTAAGGGTGGATAACATCATCCGTGCAAGACCAAGA
    ACCGCCAATAGACAACATATGTAA


Note that `parse` returns a `list` object, hence requiring `[0]` to take the first element of the list. When you have a FASTA file that contains multiple sequences, you can index the list accordingly (e.g  `[0]`, `[1]`, ...)

The last line of code uses the `format` method to generate a string representation of the sequence as a FASTA file.

Another example, using a GenBank file ([U49845](https://www.ncbi.nlm.nih.gov/nucleotide/U49845)), is shown below.


```python
from pydna.parsers import parse

file_path = "./U49845.gb"
files = parse(file_path)

# Convert the Dseqrecord object into a formatted string in GenBank format
files[0].format("gb")

```




    LOCUS       SCU49845                5028 bp    DNA     linear   PLN 29-OCT-2018
    DEFINITION  Saccharomyces cerevisiae TCP1-beta gene, partial cds; and Axl2p
                (AXL2) and Rev7p (REV7) genes, complete cds.
    ACCESSION   U49845
    VERSION     U49845.1
    KEYWORDS    .
    SOURCE      Saccharomyces cerevisiae (brewer's yeast)
      ORGANISM  Saccharomyces cerevisiae
                Eukaryota; Fungi; Dikarya; Ascomycota; Saccharomycotina;
                Saccharomycetes; Saccharomycetales; Saccharomycetaceae;
                Saccharomyces.
    REFERENCE   1  (bases 1 to 5028)
      AUTHORS   Roemer,T., Madden,K., Chang,J. and Snyder,M.
      TITLE     Selection of axial growth sites in yeast requires Axl2p, a novel
                plasma membrane glycoprotein
      JOURNAL   Genes Dev. 10 (7), 777-793 (1996)
       PUBMED   8846915
    REFERENCE   2  (bases 1 to 5028)
      AUTHORS   Roemer,T.
      TITLE     Direct Submission
      JOURNAL   Submitted (22-FEB-1996) Biology, Yale University, New Haven, CT
                06520, USA
    FEATURES             Location/Qualifiers
         source          1..5028
                         /organism="Saccharomyces cerevisiae"
                         /mol_type="genomic DNA"
                         /db_xref="taxon:4932"
                         /chromosome="IX"
         mRNA            <1..>206
                         /product="TCP1-beta"
         CDS             <1..206
                         /codon_start=3
                         /product="TCP1-beta"
                         /protein_id="AAA98665.1"
                         /translation="SSIYNGISTSGLDLNNGTIADMRQLGIVESYKLKRAVVSSASEAA
                         EVLLRVDNIIRARPRTANRQHM"
         gene            <687..>3158
                         /gene="AXL2"
         mRNA            <687..>3158
                         /gene="AXL2"
                         /product="Axl2p"
         CDS             687..3158
                         /gene="AXL2"
                         /note="plasma membrane glycoprotein"
                         /codon_start=1
                         /product="Axl2p"
                         /protein_id="AAA98666.1"
                         /translation="MTQLQISLLLTATISLLHLVVATPYEAYPIGKQYPPVARVNESFT
                         FQISNDTYKSSVDKTAQITYNCFDLPSWLSFDSSSRTFSGEPSSDLLSDANTTLYFNVI
                         LEGTDSADSTSLNNTYQFVVTNRPSISLSSDFNLLALLKNYGYTNGKNALKLDPNEVFN
                         VTFDRSMFTNEESIVSYYGRSQLYNAPLPNWLFFDSGELKFTGTAPVINSAIAPETSYS
                         FVIIATDIEGFSAVEVEFELVIGAHQLTTSIQNSLIINVTDTGNVSYDLPLNYVYLDDD
                         PISSDKLGSINLLDAPDWVALDNATISGSVPDELLGKNSNPANFSVSIYDTYGDVIYFN
                         FEVVSTTDLFAISSLPNINATRGEWFSYYFLPSQFTDYVNTNVSLEFTNSSQDHDWVKF
                         QSSNLTLAGEVPKNFDKLSLGLKANQGSQSQELYFNIIGMDSKITHSNHSANATSTRSS
                         HHSTSTSSYTSSTYTAKISSTSAAATSSAPAALPAANKTSSHNKKAVAIACGVAIPLGV
                         ILVALICFLIFWRRRRENPDDENLPHAISGPDLNNPANKPNQENATPLNNPFDDDASSY
                         DDTSIARRLAALNTLKLDNHSATESDISSVDEKRDSLSGMNTYNDQFQSQSKEELLAKP
                         PVQPPESPFFDPQNRSSSVYMDSEPAVNKSWRYTGNLSPVSDIVRDSYGSQKTVDTEKL
                         FDLEAPEKEKRTSRDVTMSSLDPWNSNISPSPVRKSVTPSPYNVTKHRNRHLQNIQDSQ
                         SGKNGITPTTMSTSSSDDFVPVKDGENFCWVHSMEPDRRPSKKRLVDFSNKSNVNVGQV
                         KDIHGRIPEML"
         gene            complement(<3300..>4037)
                         /gene="REV7"
         mRNA            complement(<3300..>4037)
                         /gene="REV7"
                         /product="Rev7p"
         CDS             complement(3300..4037)
                         /gene="REV7"
                         /codon_start=1
                         /product="Rev7p"
                         /protein_id="AAA98667.1"
                         /translation="MNRWVEKWLRVYLKCYINLILFYRNVYPPQSFDYTTYQSFNLPQF
                         VPINRHPALIDYIEELILDVLSKLTHVYRFSICIINKKNDLCIEKYVLDFSELQHVDKD
                         DQIITETEVFDEFRSSLNSLIMHLEKLPKVNDDTITFEAVINAIELELGHKLDRNRRVD
                         SLEEKAEIERDSNWVKCQEDENLPDNNGFQPPKIKLTSLVGSDVGPLIIHQFSEKLISG
                         DDKILNGVYSQYEEGESIFGSLF"
    ORIGIN
            1 gatcctccat atacaacggt atctccacct caggtttaga tctcaacaac ggaaccattg
           61 ccgacatgag acagttaggt atcgtcgaga gttacaagct aaaacgagca gtagtcagct
          121 ctgcatctga agccgctgaa gttctactaa gggtggataa catcatccgt gcaagaccaa
          181 gaaccgccaa tagacaacat atgtaacata tttaggatat acctcgaaaa taataaaccg
          241 ccacactgtc attattataa ttagaaacag aacgcaaaaa ttatccacta tataattcaa
          301 agacgcgaaa aaaaaagaac aacgcgtcat agaacttttg gcaattcgcg tcacaaataa
          361 attttggcaa cttatgtttc ctcttcgagc agtactcgag ccctgtctca agaatgtaat
          421 aatacccatc gtaggtatgg ttaaagatag catctccaca acctcaaagc tccttgccga
          481 gagtcgccct cctttgtcga gtaattttca cttttcatat gagaacttat tttcttattc
          541 tttactctca catcctgtag tgattgacac tgcaacagcc accatcacta gaagaacaga
          601 acaattactt aatagaaaaa ttatatcttc ctcgaaacga tttcctgctt ccaacatcta
          661 cgtatatcaa gaagcattca cttaccatga cacagcttca gatttcatta ttgctgacag
          721 ctactatatc actactccat ctagtagtgg ccacgcccta tgaggcatat cctatcggaa
          781 aacaataccc cccagtggca agagtcaatg aatcgtttac atttcaaatt tccaatgata
          841 cctataaatc gtctgtagac aagacagctc aaataacata caattgcttc gacttaccga
          901 gctggctttc gtttgactct agttctagaa cgttctcagg tgaaccttct tctgacttac
          961 tatctgatgc gaacaccacg ttgtatttca atgtaatact cgagggtacg gactctgccg
         1021 acagcacgtc tttgaacaat acataccaat ttgttgttac aaaccgtcca tccatctcgc
         1081 tatcgtcaga tttcaatcta ttggcgttgt taaaaaacta tggttatact aacggcaaaa
         1141 acgctctgaa actagatcct aatgaagtct tcaacgtgac ttttgaccgt tcaatgttca
         1201 ctaacgaaga atccattgtg tcgtattacg gacgttctca gttgtataat gcgccgttac
         1261 ccaattggct gttcttcgat tctggcgagt tgaagtttac tgggacggca ccggtgataa
         1321 actcggcgat tgctccagaa acaagctaca gttttgtcat catcgctaca gacattgaag
         1381 gattttctgc cgttgaggta gaattcgaat tagtcatcgg ggctcaccag ttaactacct
         1441 ctattcaaaa tagtttgata atcaacgtta ctgacacagg taacgtttca tatgacttac
         1501 ctctaaacta tgtttatctc gatgacgatc ctatttcttc tgataaattg ggttctataa
         1561 acttattgga tgctccagac tgggtggcat tagataatgc taccatttcc gggtctgtcc
         1621 cagatgaatt actcggtaag aactccaatc ctgccaattt ttctgtgtcc atttatgata
         1681 cttatggtga tgtgatttat ttcaacttcg aagttgtctc cacaacggat ttgtttgcca
         1741 ttagttctct tcccaatatt aacgctacaa ggggtgaatg gttctcctac tattttttgc
         1801 cttctcagtt tacagactac gtgaatacaa acgtttcatt agagtttact aattcaagcc
         1861 aagaccatga ctgggtgaaa ttccaatcat ctaatttaac attagctgga gaagtgccca
         1921 agaatttcga caagctttca ttaggtttga aagcgaacca aggttcacaa tctcaagagc
         1981 tatattttaa catcattggc atggattcaa agataactca ctcaaaccac agtgcgaatg
         2041 caacgtccac aagaagttct caccactcca cctcaacaag ttcttacaca tcttctactt
         2101 acactgcaaa aatttcttct acctccgctg ctgctacttc ttctgctcca gcagcgctgc
         2161 cagcagccaa taaaacttca tctcacaata aaaaagcagt agcaattgcg tgcggtgttg
         2221 ctatcccatt aggcgttatc ctagtagctc tcatttgctt cctaatattc tggagacgca
         2281 gaagggaaaa tccagacgat gaaaacttac cgcatgctat tagtggacct gatttgaata
         2341 atcctgcaaa taaaccaaat caagaaaacg ctacaccttt gaacaacccc tttgatgatg
         2401 atgcttcctc gtacgatgat acttcaatag caagaagatt ggctgctttg aacactttga
         2461 aattggataa ccactctgcc actgaatctg atatttccag cgtggatgaa aagagagatt
         2521 ctctatcagg tatgaataca tacaatgatc agttccaatc ccaaagtaaa gaagaattat
         2581 tagcaaaacc cccagtacag cctccagaga gcccgttctt tgacccacag aataggtctt
         2641 cttctgtgta tatggatagt gaaccagcag taaataaatc ctggcgatat actggcaacc
         2701 tgtcaccagt ctctgatatt gtcagagaca gttacggatc acaaaaaact gttgatacag
         2761 aaaaactttt cgatttagaa gcaccagaga aggaaaaacg tacgtcaagg gatgtcacta
         2821 tgtcttcact ggacccttgg aacagcaata ttagcccttc tcccgtaaga aaatcagtaa
         2881 caccatcacc atataacgta acgaagcatc gtaaccgcca cttacaaaat attcaagact
         2941 ctcaaagcgg taaaaacgga atcactccca caacaatgtc aacttcatct tctgacgatt
         3001 ttgttccggt taaagatggt gaaaattttt gctgggtcca tagcatggaa ccagacagaa
         3061 gaccaagtaa gaaaaggtta gtagattttt caaataagag taatgtcaat gttggtcaag
         3121 ttaaggacat tcacggacgc atcccagaaa tgctgtgatt atacgcaacg atattttgct
         3181 taattttatt ttcctgtttt attttttatt agtggtttac agatacccta tattttattt
         3241 agtttttata cttagagaca tttaatttta attccattct tcaaatttca tttttgcact
         3301 taaaacaaag atccaaaaat gctctcgccc tcttcatatt gagaatacac tccattcaaa
         3361 attttgtcgt caccgctgat taatttttca ctaaactgat gaataatcaa aggccccacg
         3421 tcagaaccga ctaaagaagt gagttttatt ttaggaggtt gaaaaccatt attgtctggt
         3481 aaattttcat cttcttgaca tttaacccag tttgaatccc tttcaatttc tgctttttcc
         3541 tccaaactat cgaccctcct gtttctgtcc aacttatgtc ctagttccaa ttcgatcgca
         3601 ttaataactg cttcaaatgt tattgtgtca tcgttgactt taggtaattt ctccaaatgc
         3661 ataatcaaac tatttaagga agatcggaat tcgtcgaaca cttcagtttc cgtaatgatc
         3721 tgatcgtctt tatccacatg ttgtaattca ctaaaatcta aaacgtattt ttcaatgcat
         3781 aaatcgttct ttttattaat aatgcagatg gaaaatctgt aaacgtgcgt taatttagaa
         3841 agaacatcca gtataagttc ttctatatag tcaattaaag caggatgcct attaatggga
         3901 acgaactgcg gcaagttgaa tgactggtaa gtagtgtagt cgaatgactg aggtgggtat
         3961 acatttctat aaaataaaat caaattaatg tagcatttta agtataccct cagccacttc
         4021 tctacccatc tattcataaa gctgacgcaa cgattactat tttttttttc ttcttggatc
         4081 tcagtcgtcg caaaaacgta taccttcttt ttccgacctt ttttttagct ttctggaaaa
         4141 gtttatatta gttaaacagg gtctagtctt agtgtgaaag ctagtggttt cgattgactg
         4201 atattaagaa agtggaaatt aaattagtag tgtagacgta tatgcatatg tatttctcgc
         4261 ctgtttatgt ttctacgtac ttttgattta tagcaagggg aaaagaaata catactattt
         4321 tttggtaaag gtgaaagcat aatgtaaaag ctagaataaa atggacgaaa taaagagagg
         4381 cttagttcat cttttttcca aaaagcaccc aatgataata actaaaatga aaaggatttg
         4441 ccatctgtca gcaacatcag ttgtgtgagc aataataaaa tcatcacctc cgttgccttt
         4501 agcgcgtttg tcgtttgtat cttccgtaat tttagtctta tcaatgggaa tcataaattt
         4561 tccaatgaat tagcaatttc gtccaattct ttttgagctt cttcatattt gctttggaat
         4621 tcttcgcact tcttttccca ttcatctctt tcttcttcca aagcaacgat ccttctaccc
         4681 atttgctcag agttcaaatc ggcctctttc agtttatcca ttgcttcctt cagtttggct
         4741 tcactgtctt ctagctgttg ttctagatcc tggtttttct tggtgtagtt ctcattatta
         4801 gatctcaagt tattggagtc ttcagccaat tgctttgtat cagacaattg actctctaac
         4861 ttctccactt cactgtcgag ttgctcgttt ttagcggaca aagatttaat ctcgttttct
         4921 ttttcagtgt tagattgctc taattctttg agctgttctc tcagctcctc atatttttct
         4981 tgccatgact cagattctaa ttttaagcta ttcaatttct ctttgatc
    //



Now, you can work with the sequence record using pydna, using the `Dseqrecord` class. `Dseqrecord` provides ways to highlight regions of interest on the sequence, adding new features to the record, removing features, and creating new `Dseqrecord` objects to store and export your changes. Please refer to the `Dseq_Features` notebook for more information.

## Importing Sequences from Strings

`parse` also allows sequences to be read from a string alone. This could be useful to read FASTA sequences obtained from GenBank APIs. 


```python
from pydna.parsers import parse

my_record = parse(
'''
>lcl|U49845.1_cds_AAA98667.1_3 [gene=REV7] [protein=Rev7p] [protein_id=AAA98667.1] [location=complement(3300..4037)] [gbkey=CDS]
ATGAATAGATGGGTAGAGAAGTGGCTGAGGGTATACTTAAAATGCTACATTAATTTGATTTTATTTTATA
GAAATGTATACCCACCTCAGTCATTCGACTACACTACTTACCAGTCATTCAACTTGCCGCAGTTCGTTCC
CATTAATAGGCATCCTGCTTTAATTGACTATATAGAAGAACTTATACTGGATGTTCTTTCTAAATTAACG
CACGTTTACAGATTTTCCATCTGCATTATTAATAAAAAGAACGATTTATGCATTGAAAAATACGTTTTAG
ATTTTAGTGAATTACAACATGTGGATAAAGACGATCAGATCATTACGGAAACTGAAGTGTTCGACGAATT
CCGATCTTCCTTAAATAGTTTGATTATGCATTTGGAGAAATTACCTAAAGTCAACGATGACACAATAACA
TTTGAAGCAGTTATTAATGCGATCGAATTGGAACTAGGACATAAGTTGGACAGAAACAGGAGGGTCGATA
GTTTGGAGGAAAAAGCAGAAATTGAAAGGGATTCAAACTGGGTTAAATGTCAAGAAGATGAAAATTTACC
AGACAATAATGGTTTTCAACCTCCTAAAATAAAACTCACTTCTTTAGTCGGTTCTGACGTGGGGCCTTTG
ATTATTCATCAGTTTAGTGAAAAATTAATCAGCGGTGACGACAAAATTTTGAATGGAGTGTATTCTCAAT
ATGAAGAGGGCGAGAGCATTTTTGGATCTTTGTTTTAA
'''
)
print(my_record[0].format("fasta"))
```

    >lcl|U49845.1_cds_AAA98667.1_3 [gene=REV7] [protein=Rev7p] [protein_id=AAA98667.1] [location=complement(3300..4037)] [gbkey=CDS]
    ATGAATAGATGGGTAGAGAAGTGGCTGAGGGTATACTTAAAATGCTACATTAATTTGATT
    TTATTTTATAGAAATGTATACCCACCTCAGTCATTCGACTACACTACTTACCAGTCATTC
    AACTTGCCGCAGTTCGTTCCCATTAATAGGCATCCTGCTTTAATTGACTATATAGAAGAA
    CTTATACTGGATGTTCTTTCTAAATTAACGCACGTTTACAGATTTTCCATCTGCATTATT
    AATAAAAAGAACGATTTATGCATTGAAAAATACGTTTTAGATTTTAGTGAATTACAACAT
    GTGGATAAAGACGATCAGATCATTACGGAAACTGAAGTGTTCGACGAATTCCGATCTTCC
    TTAAATAGTTTGATTATGCATTTGGAGAAATTACCTAAAGTCAACGATGACACAATAACA
    TTTGAAGCAGTTATTAATGCGATCGAATTGGAACTAGGACATAAGTTGGACAGAAACAGG
    AGGGTCGATAGTTTGGAGGAAAAAGCAGAAATTGAAAGGGATTCAAACTGGGTTAAATGT
    CAAGAAGATGAAAATTTACCAGACAATAATGGTTTTCAACCTCCTAAAATAAAACTCACT
    TCTTTAGTCGGTTCTGACGTGGGGCCTTTGATTATTCATCAGTTTAGTGAAAAATTAATC
    AGCGGTGACGACAAAATTTTGAATGGAGTGTATTCTCAATATGAAGAGGGCGAGAGCATT
    TTTGGATCTTTGTTTTAA


## Extra info

Note that pydna's `parse` guesses whether the argument passed is a file path or a string, and also guesses the file type based on the content, so it can give unexpected behaviour if your files are not well formatted. To have more control over the parsing of sequences, you can use biopython's `parse` from `Bio.SeqIO`, and then instantiate a `Dseqrecord` from the biopython's `SeqRecord`


```python
from Bio.SeqIO import parse as seqio_parse
from pydna.dseqrecord import Dseqrecord

file_path = './U49845.gb'

# Extract the first Seqrecord of the SeqIO.parse iterator
seq_record = next(seqio_parse(file_path, 'genbank'))

# This is how circularity is stored in biopython's seqrecord
is_circular = 'topology' in seq_record.annotations.keys() and seq_record.annotations['topology'] == 'circular'

# Convert into Dseqrecord
dseq_record = Dseqrecord(seq_record, circular=is_circular)

dseq_record
```




    Dseqrecord(-5028)


